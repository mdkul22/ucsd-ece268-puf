// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// AXILiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/SC)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        others - reserved
// 0x10 : Data signal of challenge1axi_V
//        bit 3~0 - challenge1axi_V[3:0] (Read/Write)
//        others  - reserved
// 0x14 : reserved
// 0x18 : Data signal of challenge2axi_V
//        bit 3~0 - challenge2axi_V[3:0] (Read/Write)
//        others  - reserved
// 0x1c : reserved
// 0x20 : Data signal of responseaxi_V
//        bit 7~0 - responseaxi_V[7:0] (Read)
//        others  - reserved
// 0x24 : Control signal of responseaxi_V
//        bit 0  - responseaxi_V_ap_vld (Read/COR)
//        others - reserved
// 0x28 : Data signal of tuneraxi_V
//        bit 31~0 - tuneraxi_V[31:0] (Read/Write)
// 0x2c : Data signal of tuneraxi_V
//        bit 7~0 - tuneraxi_V[39:32] (Read/Write)
//        others  - reserved
// 0x30 : reserved
// 0x34 : Data signal of output1axi_V
//        bit 7~0 - output1axi_V[7:0] (Read)
//        others  - reserved
// 0x38 : Control signal of output1axi_V
//        bit 0  - output1axi_V_ap_vld (Read/COR)
//        others - reserved
// 0x3c : Data signal of output2axi_V
//        bit 7~0 - output2axi_V[7:0] (Read)
//        others  - reserved
// 0x40 : Control signal of output2axi_V
//        bit 0  - output2axi_V_ap_vld (Read/COR)
//        others - reserved
// 0x44 : Data signal of startaxi_V
//        bit 0  - startaxi_V[0] (Read/Write)
//        others - reserved
// 0x48 : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XPUF_AXI_INTERFACE_AXILITES_ADDR_AP_CTRL              0x00
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_GIE                  0x04
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_IER                  0x08
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_ISR                  0x0c
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_CHALLENGE1AXI_V_DATA 0x10
#define XPUF_AXI_INTERFACE_AXILITES_BITS_CHALLENGE1AXI_V_DATA 4
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_CHALLENGE2AXI_V_DATA 0x18
#define XPUF_AXI_INTERFACE_AXILITES_BITS_CHALLENGE2AXI_V_DATA 4
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_RESPONSEAXI_V_DATA   0x20
#define XPUF_AXI_INTERFACE_AXILITES_BITS_RESPONSEAXI_V_DATA   8
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_RESPONSEAXI_V_CTRL   0x24
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_TUNERAXI_V_DATA      0x28
#define XPUF_AXI_INTERFACE_AXILITES_BITS_TUNERAXI_V_DATA      40
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_OUTPUT1AXI_V_DATA    0x34
#define XPUF_AXI_INTERFACE_AXILITES_BITS_OUTPUT1AXI_V_DATA    8
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_OUTPUT1AXI_V_CTRL    0x38
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_OUTPUT2AXI_V_DATA    0x3c
#define XPUF_AXI_INTERFACE_AXILITES_BITS_OUTPUT2AXI_V_DATA    8
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_OUTPUT2AXI_V_CTRL    0x40
#define XPUF_AXI_INTERFACE_AXILITES_ADDR_STARTAXI_V_DATA      0x44
#define XPUF_AXI_INTERFACE_AXILITES_BITS_STARTAXI_V_DATA      1

